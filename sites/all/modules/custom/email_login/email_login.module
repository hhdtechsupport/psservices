<?php
/**
 * @file
 * Enables the login form to accept both usernames and email addresses.
 */

/**
 * Implements hook_form_alter
 */
function email_login_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'user_login' || $form_id == 'user_login_block') {
    if ($form_id == 'user_login') {
      $form['name']['#title'] = t('Username or Email Address');
    }
    else {
      // Shorter title is used, because of decreased space in the block
      $form['name']['#title'] = t('Username or Email');
    }
    $form['name']['#description'] = t('Enter the @s username or email address associated with your account.',
      array('@s' => variable_get('site_name', 'Drupal')));

    $form_state['rebuild'] = TRUE;

    // Add our validation handler on the front of the list.
    array_unshift($form['#validate'], '_email_login_get_username');

    return $form;
  }
}

/**
 * First validation function for user_login form.
 * Resolves email address to username, if email address is present
 */
function _email_login_get_username($form, &$form_state) {
  if (strpos($form['name']['#value'], '@') !== FALSE) {
    //Email address present in name field
    $usernameResults = db_query('SELECT u.name FROM {users} u WHERE u.mail = :mail', 
      array(':mail' => $form_state['values']['name']));
    $username = $usernameResults->fetchAssoc();
    if ($username == null) {
      form_set_error('name', t('Sorry, unrecognized username or password. <a href="@password">Have you forgotten your password?</a>', array('@password' => url('user/password'))));
    }
    else {
      $username = $username['name'];
      form_set_value($form['name'], $username, $form_state);
    }
  }
}

/**
 * Implements hook_help
 */
function email_login_help($path, $arg) {
  switch ($path) {
    case "admin/help/email_login":
      $output = t("This module requires no configuration. When installed, users will be able to log in with their email addresses as well as their usernames") ;
      return $output;
      break;
  }
}
